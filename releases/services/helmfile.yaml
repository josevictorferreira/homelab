releases:
  - name: postgresql
    namespace: {{ .Values.namespaces.services }}
    chart: bitnami/postgresql
    version: {{ .Values.versions.postgresql }}
    values:
      - global:
          postgresql:
            auth:
              postgresPassword: "{{ .Values.secret.postgresql_password }}"
              database: linkwarden
      - primary:
          service:
            type: LoadBalancer
            loadBalancerIP: {{ .Values.load_balancer.addresses.services.postgresql }}
            annotations:
              - metallb.universe.tf/allow-shared-ip: postgresql
  - name: linkwarden
    namespace: {{ .Values.namespaces.services }}
    chart: fmjstudios/linkwarden
    version: {{ .Values.versions.linkwarden }}
    needs:
      - postgresql
    values:
      - image:
          tag: "v2.9.3"
      - linkwarden:
          labels:
            app: linkwarden
            release: linkwarden
          domain: "linkwarden.{{ .Values.secret.domain }}"
          nextAuthSecret:
            value: "{{ .Values.secret.linkwarden_secret }}"
          data:
            storageType: filesystem
            filesystem:
              pvc:
                storageClass: local-path
          database:
            user: postgres
            password: "{{ .Values.secret.postgresql_password }}"
            host: postgresql-hl
            name: linkwarden
      - service:
          port: 80
          type: LoadBalancer
          loadBalancerIP: {{ .Values.load_balancer.addresses.services.linkwarden }}
      - postgresql:
          enabled: false
      - ingress:
          enabled: true
          className: nginx
          annotations:
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          tls:
            - secretName: "wildcard-homeserver-domain-tls"
              hosts:
                - "linkwarden.{{ .Values.secret.domain }}"
  - name: rabbitmq
    namespace: {{ .Values.namespaces.services }}
    chart: oci://registry-1.docker.io/bitnamicharts/rabbitmq
    version: {{ .Values.versions.rabbitmq }}
    values:
      - extraContainerPorts:
          - name: mqtt
            protocol: TCP
            containerPort: 1883
          - name: mqtts
            protocol: TCP
            containerPort: 8883
      - service:
          type: LoadBalancer
          loadBalancerIP: {{ .Values.load_balancer.addresses.services.rabbitmq }}
          annotations:
            - metallb.universe.tf/allow-shared-ip: rabbitmq
          extraPorts:
            - name: mqtt
              port: 1883
              targetPort: 1883
            - name: mqtts
              port: 8883
              targetPort: 8883
          extraPortsHeadless:
            - name: mqtt
              port: 1883
              targetPort: 1883
            - name: mqtts
              port: 8883
              targetPort: 8883
      - networkPolicy:
          extraIngress:
            - ports:
                - protocol: "TCP"
                  containerPort: 1883
                  port: 1883
                - protocol: "TCP"
                  containerPort: 8883
                  port: 8883
      - auth:
          username: "{{ .Values.secret.rabbitmq_username }}"
          erlangCookie: "{{ .Values.secret.rabbitmq_cookie }}"
          password: "{{ .Values.secret.rabbitmq_password }}"
      - extraPlugins: "rabbitmq_management rabbitmq_auth_backend_ldap rabbitmq_prometheus rabbitmq_delayed_message_exchange rabbitmq_mqtt rabbitmq_web_mqtt"
      - ingress:
          enabled: true
          ingressClassName: nginx
          hostname: rabbitmq.{{ .Values.secret.domain }}
          existingSecret: "wildcard-homeserver-domain-tls"
          annotations:
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          tls: true
      - metrics:
          enabled: true
          serviceMonitor:
            namespace: monitoring
            default:
              enabled: true
  - name: frigate
    namespace: {{ .Values.namespaces.services }}
    chart: blakeblackshear/frigate
    version: {{ .Values.versions.frigate }}
    values:
      - service:
          type: LoadBalancer
          loadBalancerIP: {{ .Values.load_balancer.addresses.services.frigate }}
      - ingress:
          enabled: true
          ingressClassName: nginx
          annotations:
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: frigate.{{ .Values.secret.domain }}
              paths:
                - path: /
                  portName: http
          tls:
            - secretName: wildcard-homeserver-domain-tls
              hosts:
                - frigate.{{ .Values.secret.domain }}
      - persistence:
          config:
            enabled: true
            storageClass: local-path
          media:
            enabled: true
            storageClass: local-storage
      - config: |
          mqtt:
            host: rabbitmq-headless
            port: 1883
            user: {{ .Values.secret.rabbitmq_username }}
            password: {{ .Values.secret.rabbitmq_password }}
          cameras:
            front:
              ffmpeg:
                inputs:
                  - path: "{{ .Values.secret.camera_front_uri }}"
                    roles: []
  - name: proxmox-external-ingress
    namespace: {{ .Values.namespaces.services }}
    chart: ./../../charts/ingress-customized
    values:
      - app:
          name: proxmox-external
          labels:
            app: proxmox-external
            release: proxmox-external-ingress
      - externalService:
          enabled: true
          externalName: {{ .Values.load_balancer.addresses.services.proxmox }}
          ports:
            - name: https
              port: 8006
              targetPort: 8006
      - ingress:
          ingressClassName: nginx
          portName: https
          hostname: proxmox.{{ .Values.secret.domain }}
          existingSecret: "wildcard-homeserver-domain-tls"
          annotations:
            nginx.ingress.kubernetes.io/upstream-vhost: "promox.{{ .Values.secret.domain }}"
            nginx.ingress.kubernetes.io/ssl-passthrough: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          tls: true

helmfiles:
  - path: pihole/helmfile.yaml
    values:
      - {{ toYaml .Values | nindent 8 }}
